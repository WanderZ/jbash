/* Generated By:JavaCC: Do not edit this line. jBashConstants.java */
package jBash;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface jBashConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SEMICOLON = 7;
  /** RegularExpression Id. */
  int DOUBLESEMICOLON = 8;
  /** RegularExpression Id. */
  int CRLF = 9;
  /** RegularExpression Id. */
  int PIPE = 10;
  /** RegularExpression Id. */
  int AND = 11;
  /** RegularExpression Id. */
  int DOUBLEAND = 12;
  /** RegularExpression Id. */
  int DOUBLEPIPE = 13;
  /** RegularExpression Id. */
  int EQUAL = 14;
  /** RegularExpression Id. */
  int DOUBLEEQUAL = 15;
  /** RegularExpression Id. */
  int DIFFERENT = 16;
  /** RegularExpression Id. */
  int MINOR = 17;
  /** RegularExpression Id. */
  int MAJOR = 18;
  /** RegularExpression Id. */
  int MINEQ = 19;
  /** RegularExpression Id. */
  int MAJEQ = 20;
  /** RegularExpression Id. */
  int DOUBLEMIN = 21;
  /** RegularExpression Id. */
  int DOUBLEMAJ = 22;
  /** RegularExpression Id. */
  int PRODUCT = 23;
  /** RegularExpression Id. */
  int DIVISION = 24;
  /** RegularExpression Id. */
  int MODULE = 25;
  /** RegularExpression Id. */
  int PLUS = 26;
  /** RegularExpression Id. */
  int MIN = 27;
  /** RegularExpression Id. */
  int BILL = 28;
  /** RegularExpression Id. */
  int ESCL = 29;
  /** RegularExpression Id. */
  int LBRACE = 30;
  /** RegularExpression Id. */
  int RBRACE = 31;
  /** RegularExpression Id. */
  int LTON = 32;
  /** RegularExpression Id. */
  int RTON = 33;
  /** RegularExpression Id. */
  int DLTON = 34;
  /** RegularExpression Id. */
  int DRTON = 35;
  /** RegularExpression Id. */
  int APOS = 36;
  /** RegularExpression Id. */
  int DOT = 37;
  /** RegularExpression Id. */
  int IF = 38;
  /** RegularExpression Id. */
  int ELIF = 39;
  /** RegularExpression Id. */
  int ELSE = 40;
  /** RegularExpression Id. */
  int FI = 41;
  /** RegularExpression Id. */
  int FOR = 42;
  /** RegularExpression Id. */
  int DO = 43;
  /** RegularExpression Id. */
  int DONE = 44;
  /** RegularExpression Id. */
  int WHILE = 45;
  /** RegularExpression Id. */
  int UNTIL = 46;
  /** RegularExpression Id. */
  int SELECT = 47;
  /** RegularExpression Id. */
  int IN = 48;
  /** RegularExpression Id. */
  int CASE = 49;
  /** RegularExpression Id. */
  int ESAC = 50;
  /** RegularExpression Id. */
  int FUNCTION = 51;
  /** RegularExpression Id. */
  int RETURN = 52;
  /** RegularExpression Id. */
  int THEN = 53;
  /** RegularExpression Id. */
  int BASH_VERSION = 54;
  /** RegularExpression Id. */
  int ALIAS = 55;
  /** RegularExpression Id. */
  int BREAK = 56;
  /** RegularExpression Id. */
  int CD = 57;
  /** RegularExpression Id. */
  int COMMAND = 58;
  /** RegularExpression Id. */
  int DECLARE = 59;
  /** RegularExpression Id. */
  int TYPESET = 60;
  /** RegularExpression Id. */
  int ECHO = 61;
  /** RegularExpression Id. */
  int EXEC = 62;
  /** RegularExpression Id. */
  int EXIT = 63;
  /** RegularExpression Id. */
  int EXPORT = 64;
  /** RegularExpression Id. */
  int HELP = 65;
  /** RegularExpression Id. */
  int KILL = 66;
  /** RegularExpression Id. */
  int SPTP = 67;
  /** RegularExpression Id. */
  int SUSPEND = 68;
  /** RegularExpression Id. */
  int TEST = 69;
  /** RegularExpression Id. */
  int TIMES = 70;
  /** RegularExpression Id. */
  int ULIMIT = 71;
  /** RegularExpression Id. */
  int UMASK = 72;
  /** RegularExpression Id. */
  int UNALIAS = 73;
  /** RegularExpression Id. */
  int UNSET = 74;
  /** RegularExpression Id. */
  int WAIT = 75;
  /** RegularExpression Id. */
  int NUMERO = 76;
  /** RegularExpression Id. */
  int NOME_VALIDO = 77;
  /** RegularExpression Id. */
  int LETTERA = 78;
  /** RegularExpression Id. */
  int DIGIT = 79;
  /** RegularExpression Id. */
  int STRINGA = 80;
  /** RegularExpression Id. */
  int DIRECTORY = 81;
  /** RegularExpression Id. */
  int ZERO = 82;
  /** RegularExpression Id. */
  int PARAM = 83;
  /** RegularExpression Id. */
  int P2 = 84;
  /** RegularExpression Id. */
  int P3 = 85;
  /** RegularExpression Id. */
  int P4 = 86;
  /** RegularExpression Id. */
  int P5 = 87;
  /** RegularExpression Id. */
  int P6 = 88;
  /** RegularExpression Id. */
  int P7 = 89;
  /** RegularExpression Id. */
  int P8 = 90;
  /** RegularExpression Id. */
  int P9 = 91;
  /** RegularExpression Id. */
  int P10 = 92;
  /** RegularExpression Id. */
  int P11 = 93;
  /** RegularExpression Id. */
  int P12 = 94;
  /** RegularExpression Id. */
  int P13 = 95;
  /** RegularExpression Id. */
  int P14 = 96;
  /** RegularExpression Id. */
  int P15 = 97;
  /** RegularExpression Id. */
  int P16 = 98;
  /** RegularExpression Id. */
  int P17 = 99;
  /** RegularExpression Id. */
  int P18 = 100;
  /** RegularExpression Id. */
  int P19 = 101;
  /** RegularExpression Id. */
  int P20 = 102;
  /** RegularExpression Id. */
  int P21 = 103;
  /** RegularExpression Id. */
  int P22 = 104;
  /** RegularExpression Id. */
  int P23 = 105;
  /** RegularExpression Id. */
  int P24 = 106;
  /** RegularExpression Id. */
  int P25 = 107;
  /** RegularExpression Id. */
  int P26 = 108;
  /** RegularExpression Id. */
  int P27 = 109;
  /** RegularExpression Id. */
  int P28 = 110;
  /** RegularExpression Id. */
  int P29 = 111;
  /** RegularExpression Id. */
  int P30 = 112;
  /** RegularExpression Id. */
  int P31 = 113;
  /** RegularExpression Id. */
  int P32 = 114;
  /** RegularExpression Id. */
  int P33 = 115;
  /** RegularExpression Id. */
  int P34 = 116;
  /** RegularExpression Id. */
  int P35 = 117;
  /** RegularExpression Id. */
  int P36 = 118;
  /** RegularExpression Id. */
  int P37 = 119;
  /** RegularExpression Id. */
  int P38 = 120;
  /** RegularExpression Id. */
  int P39 = 121;
  /** RegularExpression Id. */
  int P40 = 122;
  /** RegularExpression Id. */
  int P41 = 123;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"#\"",
    "\"\\n\"",
    "<token of kind 6>",
    "\";\"",
    "\";;\"",
    "\"\\n\"",
    "\"|\"",
    "\"&\"",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"<<\"",
    "\">>\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"+\"",
    "\"-\"",
    "\"$\"",
    "\"!\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"((\"",
    "\"))\"",
    "\"\\\'\"",
    "\".\"",
    "\"if\"",
    "\"elif\"",
    "\"else\"",
    "\"fi\"",
    "\"for\"",
    "\"do\"",
    "\"done\"",
    "\"while\"",
    "\"until\"",
    "\"select\"",
    "\"in\"",
    "\"case\"",
    "\"esac\"",
    "\"function\"",
    "\"return\"",
    "\"then\"",
    "\"BASH_VERSION\"",
    "\"alias\"",
    "\"break\"",
    "\"cd\"",
    "\"command\"",
    "\"declare\"",
    "\"typeset\"",
    "\"echo\"",
    "\"exec\"",
    "\"exit\"",
    "\"export\"",
    "\"help\"",
    "\"kill\"",
    "\"sptp\"",
    "\"suspend\"",
    "\"test\"",
    "\"times\"",
    "\"ulimit\"",
    "\"umask\"",
    "\"unalias\"",
    "\"unset\"",
    "\"wait\"",
    "<NUMERO>",
    "<NOME_VALIDO>",
    "<LETTERA>",
    "<DIGIT>",
    "<STRINGA>",
    "<DIRECTORY>",
    "\"0\"",
    "<PARAM>",
    "\"a\"",
    "\"o\"",
    "\"n\"",
    "\"z\"",
    "\"eq\"",
    "\"ge\"",
    "\"gt\"",
    "\"le\"",
    "\"ne\"",
    "\"ef\"",
    "\"nt\"",
    "\"ot\"",
    "\"b\"",
    "\"c\"",
    "\"d\"",
    "\"e\"",
    "\"f\"",
    "\"g\"",
    "\"h\"",
    "\"k\"",
    "\"L\"",
    "\"p\"",
    "\"r\"",
    "\"s\"",
    "\"S\"",
    "\"t\"",
    "\"u\"",
    "\"w\"",
    "\"x\"",
    "\"P\"",
    "\"v\"",
    "\"V\"",
    "\"F\"",
    "\"i\"",
    "\"E\"",
    "\"cl\"",
    "\"l\"",
    "\"H\"",
    "\"m\"",
    "\"q\"",
  };

}
